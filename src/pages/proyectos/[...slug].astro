---
// src/pages/proyectos/[...slug].astro
import { getCollection } from 'astro:content';
import { Image } from 'astro:assets';
import { Icon } from 'astro-icon/components';
import Layout from '../../layouts/Layout.astro';

// 1. La función getStaticPaths
export async function getStaticPaths() {
  const projectEntries = await getCollection('projects');
  return projectEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

// 2. Obtenemos los props para esta página específica
const { entry } = Astro.props;
const { Content } = await entry.render();

// Extraemos los datos del frontmatter para usarlos más fácil
const { title, description, publishDate, tags, mainImage, gallery, repoUrl, demoUrl } = entry.data;
---
<Layout title={title}>
    <main class="py-12 sm:py-20">
        <article class="max-w-4xl mx-auto px-6">
            <!-- Botón para volver -->
            <a href="/#proyectos" class="inline-flex items-center gap-2 text-purple-700 font-semibold hover:underline mb-8">
                <Icon name="mdi:arrow-left" class="w-5 h-5" />
                Volver a proyectos
            </a>

            <!-- Encabezado del Proyecto -->
            <div class="flex flex-col sm:flex-row justify-between sm:items-center gap-4">
                <div>
                    <p class="text-purple-600 font-medium">{tags[0]}</p>
                    <h1 class="text-4xl sm:text-5xl font-extrabold text-gray-900 mt-1">{title}</h1>
                    <p class="text-gray-500 mt-2">
                        Publicado: {publishDate.toLocaleDateString('es-ES', { year: 'numeric', month: 'long', day: 'numeric' })}
                    </p>
                </div>
                <div class="flex-shrink-0 flex items-center gap-3">
                    {repoUrl && <a href={repoUrl} target="_blank" class="inline-flex items-center gap-2 bg-gray-800 text-white px-4 py-2 rounded-lg font-semibold hover:bg-gray-900">
                        <Icon name="mdi:github" class="w-5 h-5" /> Código
                    </a>}
                    {demoUrl && <a href={demoUrl} target="_blank" class="inline-flex items-center gap-2 bg-purple-600 text-white px-4 py-2 rounded-lg font-semibold hover:bg-purple-700">
                        <Icon name="mdi:open-in-new" class="w-5 h-5" /> Ver Demo
                    </a>}
                </div>
            </div>

            <!-- Imagen Principal -->
            <div class="mt-12">
                <Image 
                    src={mainImage} 
                    alt={`Imagen principal del proyecto ${title}`}
                    class="w-full h-auto rounded-2xl shadow-2xl"
                />
            </div>

            <!-- Galería de Imágenes (si existe) -->
            {gallery && gallery.length > 0 && (
                <div class="mt-8 grid grid-cols-2 sm:grid-cols-3 gap-4">
                    {gallery.map(img => (
                        <Image src={img} alt="Imagen de la galería" class="rounded-lg shadow-lg" />
                    ))}
                </div>
            )}

            <!-- Contenido del Markdown -->
            <!-- Contenido del Markdown con Estilo Mejorado -->
            <!-- Contenido del Markdown -->
            <div class="content-area mt-12">
                <Content />
            </div>

            <div class="mt-16 pt-10 border-t border-gray-200">
                <h3 class="text-2xl font-bold text-gray-900">Tecnologías utilizadas</h3>
                <div class="mt-6 flex flex-wrap gap-3">
                    {tags.map(tag => (
                        <span class="inline-flex items-center gap-2 bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-sm font-medium">
                            <!-- Aquí podríamos poner un icono si quisiéramos -->
                            {tag}
                        </span>
                    ))}
                </div>
            </div>
        </article>
    </main>
</Layout>
